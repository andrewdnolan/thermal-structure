!echo on

!---LUA BEGIN
! assert(loadfile('../../src/elmer_src/lua_functions.lua'))()
!---LUA END


! Physical Constants
#spy         = 365.25*24*60*60              ! -- [s a^-1]
! SI base units
#rhoi_si     = 910.0                        ! -- [kg m^-3]
#rhow_si     = 1000.0                       ! -- [kg m^-3]
#gravity_si  = -9.81                        ! -- [m s^-2]
! Elmer Base units
#rhoi        = rhoi_si*1.0e-06*spy^(-2.0)
#rhow        = rhow_si*1.0e-06*spy^(-2.0)   ! -- [MPa m^-2 a^2] <--- [kg m^-3]
#gravity     = gravity_si*spy^2             ! -- [m a^-1]       <--- [m s^-2]
!-------------------------------------------------------------------------------
! Flow Law Parameters from  Cuffey and Paterson (2010)
!-------------------------------------------------------------------------------
#A1 = 2.89165e-13*spy*1.0e18  ! -- [MPa^{-3} a^{-1}] <--- [Pa^{-3} s^{-1}]
#A2 = 2.42736e-02*spy*1.0e18  ! -- [MPa^{-3} a^{-1}] <--- [Pa^{-3} s^{-1}]
! Values below are in SI units. No problem, as long as the gas constant (R) also is
#Q1 = 60.0e3                  ! -- [J mol^{-1}]
#Q2 = 115.0e3                 ! -- [J mol^{-1}]
#R  = 8.314                   ! -- [J mol^{-1} K^{-1}]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Header
  CHECK KEYWORDS Warn
  Mesh DB           "./result/<KEY>/" "mesh_dx<DX>"        !\"
  Include Path      "./result/<KEY>/"                    !\"
  Results Directory "./result/<KEY>/"                    !\"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                           BEGIN CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants
  include "./params/ref_params.sif"

  Seasonality         = Logical True

  Mass Balance Offset = Real <offset>  ! m y^{-1}

  !Physical Constants:
  Gas Constant        = real #R        ! [J mol^{-1} K^{-1}]
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                             END CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                            BEGIN SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System           = "Cartesian 2D"
  Simulation Type             = "Transient"
  Timestepping Method         = "BDF"
  BDF order                   = 2

  ! No thermomechanical coupling, so do not need a "steady-state" itteration 
  ! at each timestep. Set that here to avoid confusion
  Steady State Min Iterations = 1
  Steady State Max Iterations = 1

  Timestep Intervals          = <NT>  ![a]
  Timestep Sizes              = <dt>  ![a]
  Output Intervals            = # 500 / <dt>

  ! Post File                   = "VTU/test.vtu"
  Output File                 = "<run_name>.result"               !\"
  Max Output Level            = 3

  ! Restart File                = "<RESTART>"
  ! Restart Position            = 0
  ! Restart Time                = Real 0.0
  ! Restart Before Initial Conditions = Logical True
  Initialize Dirichlet Conditions   = Logical False
  ! Convergence Monitor         = Logical True
  ! Convergence Monitor File    = "<convg_file>"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                              END SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                 BEGIN BODIES (i.e., domains to compute on)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body 1
  Name              = "Glacier"
  Body Force        = 1
  Equation          = 1
  Material          = 1
  Initial Condition = 1
End

Body 2
  Name              = "Surface"
  Body Force        = 2
  Equation          = 2
  Material          = 2
  Initial Condition = 2
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BODIES
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
  Velocity 1       = Real 0.0
  Velocity 2       = Real 0.0
  Mesh Velocity 1  = Real 0.0
  Mesh Velocity 2  = Real 0.0
End


Initial Condition 2
  Zs    = Variable Coordinate 1
          Real
           include  "../../input_data/topography/<KEY>_surf.dat"
          End

  RefZs = Variable Coordinate 1
          Real
           include  "../../input_data/topography/<KEY>_surf.dat"
          End
  Zbed  = Variable Coordinate 1
         Real
          include  "../../input_data/topography/<KEY>_bed.dat"
         End

  Bottom Surface = Variable Coordinate 1
         Real
          include  "../../input_data/topography/<KEY>_bed.dat"
         End

  Zs Accumulation Flux 1     = Real 0.0e0
  Zs Accumulation Flux 2     = Variable Coordinate 2
                               Real Procedure "../../bin/mass_balance" "spline"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN MATERIALs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1
  Name                       = String "ice"
  Density                    = Real #rhoi_si*1.0E-06*(spy)^(-2.0)  ! [kg m-3] ---> [MPa a2 m-2]

  Viscosity Model            = String "Glen"
  ! Viscosity has to be set to a dummy value to avoid warning output from Elmer
  Viscosity                  = Real 1.0
  Glen Exponent              = Real 3.0
  Critical Shear Rate        = Real 1.0e-10
  Rate Factor 1              = Real #A1         ! -- [MPa^-3a^-1']
  Rate Factor 2              = Real #A2         ! -- [MPa^-3a^-1']
  ! these are in SI units - no problem, as long as the gas constant also is
  Activation Energy 1        = Real #Q1         ! -- [J mol^{-1}]
  Activation Energy 2        = Real #Q2         ! -- [J mol^{-1}]
  ! the temperature to switch between the two regimes in the flow law
  Limit Temperature          = Real -10.0       ! [C]
  Constant Temperature       = Real 0.00        ! [C]

  ! Soft Limiters for Free Sufrace
  Min Zs                     = Variable Zbed
                               Real lua "tx[0] + 10.0"
  Max Zs                     = Variable Zbed
                               Real lua "tx[0] + 10000.0"
End

! Soft Limiters for Free Sufrace
Material 2
  Min Zs                     = Variable Zbed
                               Real lua "tx[0] + 10.0"
  Max Zs                     = Variable Zbed
                               Real lua "tx[0] + 10000.0"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END MATERIALs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                               BEGIN SOLVERS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Solver 1
  Exec Solver           = "Before Simulation"
  Equation              = "MapCoordinate_ini"
  Procedure             = "StructuredMeshMapper" "StructuredMeshMapper"
  Active Coordinate        = Integer 2 ! the mesh-update is y-direction
  ! For time being this is currently externally allocated
  Mesh Velocity Variable   = String "Mesh Velocity 2"

  ! The 1st value is special as the mesh velocity could be unrelistically high
  Mesh Velocity First Zero = Logical True
  ! The accuracy applied to vector-projections
  Dot Product Tolerance    = Real 0.01

  Displacement Mode = Logical False
  Correct Surface   = Logical True
  Minimum Height    = Real 10.0
End

Solver 2
  Exec Solver                              = "Before Simulation"
  Equation                                 = "ExportVertically"
  Procedure                                = File "ElmerIceSolvers" "ExportVertically"
  Variable                                 = String "Zbed"
  Variable DOFs                            = 1
  Linear System Solver                     = Iterative
  Linear System Iterative Method           = BiCGStab
  Linear System Max Iterations             = 500
  Linear System Preconditioning            = ILU1
  Linear System Convergence Tolerance      = 1.0e-06

  Nonlinear System Max Iterations          = 1
  Nonlinear System Convergence Tolerance   = 1.0e-06
End


Solver 3
  Exec Interval              = <Dynamic_int>
  Timestep Scale             = <Dynamic_int>
  Equation                   = "HeightDepth"
  Procedure                  = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate          = Integer 2
  Operator 1                 = Depth
  Operator 2                 = Height
End

Solver 4
  Exec Interval                 = <Dynamic_int>
  Timestep Scale                = <Dynamic_int>
  Equation                      = String "DataToFieldSolver"
  Procedure                     = File "DataToFieldSolver" "DataToFieldSolver"
  Linear System Residual Output = Integer 0
  Variable                      = String "Mass Balance"
  Target Variable               = String "Zs Accumulation Flux 2"
End

! Navier-Stokes Equation (Stokes Flow)
Solver 5
  Exec Interval                            = <Dynamic_int>
  Timestep Scale                           = <Dynamic_int>

  Equation                                 = "Navier-Stokes"
  Flow model                               = String "Stokes"
  Optimize Bandwidth                       = Logical True
  !  Stabilization Method = [Stabilized,P2/P1,Bubbles]
  Stabilization Method                     = String "Bubbles"

  ! Linear System Solver                     = Direct
  ! Linear System Direct Method              = "UMFPACK"
  Linear System Solver                     = "Iterative"
  Linear System Iterative Method           = "BiCGStabl"
  BiCGStabl Polynomial Degree              = 4
  Linear System Max Iterations             = 1000
  Linear System Convergence Tolerance      = 1.0E-08
  Linear System Abort Not Converged        = Logical False
  Linear System Preconditioning            = "ILU0"
  
  Nonlinear System Convergence Tolerance   = 1.0E-07
  Nonlinear System Max Iterations          = 25
  Nonlinear System Newton After Iterations = 25
  Nonlinear System Newton After Tolerance  = 1.0E-04
  Nonlinear System Reset Newton            = Logical True
  ! Nonlinear System Convergence Measure     = String "solution"

  Steady State Convergence Tolerance       = 1.0E-03
  ! Steady State Convergence Measure         = String "solution"

  Exported Variable 1                      = -dofs 2 "Mesh Velocity"
  Exported Variable 2                      = -dofs 1 "Densi"
End

Solver 6
  Exec Interval                           = <Dynamic_int>
  Timestep Scale                          = <Dynamic_int>

  Equation                                = "Free Surface Evolution"
  Variable                                = String "Zs"
  Variable DOFs                           =  1

  Procedure                               = "FreeSurfaceSolver" "FreeSurfaceSolver"
  ! Before Linsolve                         = "EliminateDirichlet" "EliminateDirichlet"

  ! this enables the limitation of the free surface
  ! by upper and/or lower limits (see material section above)
  ! using a variational inequality formulation
  Apply Dirichlet                         = Logical True

  Linear System Solver                    = Iterative
  Linear System Iterative Method          = BiCGStab
  Linear System Max Iterations            = 10000
  Linear System Preconditioning           = ILU1
  Linear System Convergence Tolerance     = 1.0e-08

  Nonlinear System Max Iterations         = 100 ! variational inequality needs more than one round
  Nonlinear System Min Iterations         = 2
  Nonlinear System Convergence Tolerance  = 1.0e-10
  Nonlinear System Relaxation Factor      = Real 0.9

  Steady State Convergence Tolerance      = 1.0e-6

  Stabilization Method                    = String "Bubbles"

  ! Needed to update the Accumulation b/w itterations
  Nonlinear Update Exported Variables     = Logical True
  ! needed for evaluating the contact pressure
  Exported Variable 1                     = -dofs 1 "Zs Residual"
  ! needed for storing the initial shape (needed for updates)
  Exported Variable 2                     = -dofs 1 "RefZs"
  ! needed for save surface boundary conditions
  Exported Variable 3                     = -dofs 1 "Zs Accumulation Flux 2"
End

Solver 7
  Exec Interval            = <Dynamic_int>
  Timestep Scale           = <Dynamic_int>
  Equation                 = "MapCoordinate"
  Procedure                = "StructuredMeshMapper" "StructuredMeshMapper"
  Active Coordinate        = Integer 2

  Mesh Velocity Variable   = String "Mesh Velocity 2"
  Mesh Velocity First Zero = Logical True
  Dot Product Tolerance    = Real 1.0e-3

  Displacement Mode = Logical False
  ! Correct Surface   = Logical True
  ! Minimum Height    = Real 10.0
End

Solver 8
   Exec Solver    = String  "after timestep"

   Exec Condition = Variable "Time"
                    Real lua "netcdf_cond(tx[0], 1)"

   Equation           = "NetcdfOutPutSolve"
   Procedure          = "../../bin/NetcdfUGRIDOutputSolver" "NetcdfOutputSolver"
   Variable           = -nooutput "NetCDFOutPut"
   Active Coordinate  = Integer 2

   OutPut Directory   = File "./result/<KEY>/nc"
   Output File Name   = "<run_name>"

   Optimize Bandwidth = Logical False

  ! Stokes Solver Fields
   Scalar Field 1  = String "Pressure"
   Scalar Field 2  = String "velocity 1"
   Scalar Field 3  = String "velocity 2"
   ! Free Surface Solver Fields
   Scalar Field 4  = String "Zs"
   Scalar Field 5  = String "Zbed"
   Scalar Field 6  = String "Mass Balance"
   ! Misc Solver Fields
   Scalar Field 7  = String "Depth"
   Scalar Field 8  = String "Height"
   Compute LonLat  = Logical False
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Equation 1
  Name               = "Equation1"
  Convection         = "Computed"
  Flow Solution Name = String "Flow Solution"
  Active Solvers(7)  = 1 2 3 4 5 7 8
End

Equation 2
  Name               = "Equation2"
  Convection         = "Computed"
  Flow Solution Name = String "Flow Solution"
  Active Solvers(1)  = 6
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN BODY FORCEs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Name                   = "BodyForce"
  Flow BodyForce 1       = Real 0.0
  Flow BodyForce 2       = Real #gravity   ![m a^-1]
  Flow Solution Passive  = Variable depth, height
                           Real lua "((tx[0] + tx[1]) <= 11.0)"
End


Body Force 2
  Name                       = "Climate"
  Zs Accumulation Flux 1     = Real 0.0e0
  Zs Accumulation Flux 2     = Variable Coordinate 2
                                Real Procedure "../../bin/mass_balance" "spline"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BODY FORCE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN BOUNDARY CONDITIONs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! Bedrock
Boundary Condition 1
  Name              = "bedrock"
  Target Boundaries = 1
  Compute Normals   = Logical True

  ! No sliding
  Velocity 1        = Real 0.0e0
  Velocity 2        = Real 0.0e0
  Bottom Surface    = Variable Coordinate 1
                      Real cubic
                         include "../../input_data/topography/<KEY>_bed.dat"
                      End
  Zbed              = Variable Coordinate 1
                      Real cubic
                         include "../../input_data/topography/<KEY>_bed.dat"
                      End
End

Boundary Condition 2
  Name                 = "surface"
  Body Id              = 2
  Target Boundaries    = 2
  Top Surface          = Equals "Zs"
  Depth                = Real 0.0
End

! Upper limit of the glacier
Boundary Condition 3
  Name                       = "Head Wall"
  Target Boundaries          = 3
  Velocity 1                 = Real 0.0e0

  ! Apply Dirichlet Condition at upper margin
  ! See: https://elmerice.elmerfem.org/wiki/doku.php?id=tips:freesurface
  Zs                         = Equals "Zbed"
End

! Lower limit of the glacier
Boundary Condition 4
  Target Boundaries = 4
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BOUNDARY CONDITIONs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
