!echo off

! Physical Constants
#spy         = 365.25*24*60*60             ! -- [s a^-1]
! SI base units
#rhoi_si     = 910.0                       ! -- [kg m^-3]
#rhow_si     = 1000.0                      ! -- [kg m^-3]
#gravity_si  = -9.81                       ! -- [m s^-2]
! Elmer Base units
#rhoi        = rhoi_si*1.0E-06*spy^(-2.0)  ! -- [MPa m^-2 a^2] <--- [kg m^-3]
#rhow        = rhow_si*1.0E-06*spy^(-2.0)  ! -- [MPa m^-2 a^2] <--- [kg m^-3]
#gravity     = gravity_si*spy^2            ! -- [m a^-1]       <--- [m s^-2]
!-------------------------------------------------------------------------------
! Flow Law Parameters from  Cuffey and Paterson (2010)
!-------------------------------------------------------------------------------
#A1 = 2.89165e-13*yearinsec*1.0e18         ! -- [MPa^{-3} a^{-1}] <--- [Pa^{-3} s^{-1}]
#A2 = 2.42736e-02*yearinsec*1.0e18         ! -- [MPa^{-3} a^{-1}] <--- [Pa^{-3} s^{-1}]
! Values below are in SI units. No problem, as long as the gas constant (R) also is
#Q1 = 60.0e3                               ! -- [J mol^{-1}]
#Q2 = 115.0e3                              ! -- [J mol^{-1}]
#R  = 8.314                                ! -- [J mol^{-1} K^{-1}]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Header
  CHECK KEYWORDS Warn
  Mesh DB           "." "mesh"     !\"
  Include Path      "."            !\"
  Results Directory "."            !\"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                           BEGIN CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants
  !Physical Constants:
  Gas Constant  = real #R        ! [J mol^{-1} K^{-1}]
  rho_i         = real #rhoi_si  ! water        density               [kg m^{-3}]
  rho_w         = real #rhow_si  ! ice          density               [kg m^{-3}]
  rho_s         = real 350.      ! snow/surface density               [kg m^{-3}]
  !~~~~~~~~~~~~~~~~~~~~~~~~
  ! Mass balance paramters:
  !~~~~~~~~~~~~~~~~~~~~~~~~
  delta_T       = real 12.0      ! annual surf. air temp. amplitude   [K]
  T_mean        = real 265.15    ! mean annual surf. air. temp        [K]
  ! NOTE: Adrian claims this is in units of m w.eq.:
  A_mean        = real 2500.0    ! mean annual accumulation           [kg m^{-2} yr^{-1}]
  ref_z         = real 2300.0    ! reference surface elevation        [m a.s.l.]
  d_firn        = real 0.03      ! firn regularization                [kg m^{-2} y^{-1}]
  grad_T        = real 6.5E-3    ! air temp lapse rate                [K m^{-1}]
  grad_accu     = real 8.0E-4    ! precipitation lapse rate           [(kg m^{-2} yr^{-1}) m^{-1}]
  thresh_melt   = real 273.15    ! threshold temperature for melting  [K]
  thresh_precip = real 275.15    ! rain-snow percipitation threshold  [K]
  f_r           = real 0.20      ! refreezing factor                  [-]
  f_ice         = real #8.0E-3*rhoi_si   ! degree-day factor for ice          [kg m^{-2} yr^{-1} K^{-1}]
  f_snow        = real #5.6E-3*rhoi_si   ! degree-day factor for snow         [kg m^{-2} yr^{-1} K^{-1}]
  ! NOTE: not really sure this one is neccessary, could just be using ref_z
  z_precip      = real 2300.0    ! reference surf. elev. for precip   [m a.s.l.]
  !~~~~~~~~~~~~~~~~~~~~~~~~~~
  ! Thermodynamic parameters:
  !~~~~~~~~~~~~~~~~~~~~~~~~~~
  t_ref_enthalpy                  = real 200.0                  ![K]
  L_heat                          = real 334000.0               ![J kg-1]
  !   Cp(T) = A*T + B
  Enthalpy Heat Capacity A        = real 7.253                  ![J kg-1 K-2]
  Enthalpy Heat Capacity B        = real 146.3                  ![J kg-1 K-1]
  P_surf                          = real 0.1013                 ![MPa] Surface atmospheric pressure
  !   K(rho) = A*rho^2 + B*rho + C
  Enthalpy Heat Conductivity A    = Real 2.5e-6                 ![W m^5 K^-1 kg^-2]
  Enthalpy Heat Conductivity B    = Real 1.23e-4                ![W m^2 K^-1 kg^-1]
  Enthalpy Heat Conductivity C    = Real 0.024                  ![W kg-1 m-1]
  P_triple                        = real 6.1173e-4              ![MPa] Triple point pressure for water
  P_surf                          = real 0.1013                 ![MPa] Surface atmospheric pressure
  T_triple                        = Real 273.16                 ![K]       Temperature of water triple point
  beta_clapeyron                  = real 0.0974                 ![K MPa-1] Clausus clapeyron relationship (Gilbert et al. 2014)
  !Pressure Variable               = String "Hydro Pressure"
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ! Percolation Model Parameters:
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  rho_ice = real #rhoi_si
  rho_w   = real #rhow_si
  Sr      = real 0.03
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                             END CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                            BEGIN SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System           = "Cartesian 2D"
  Simulation Type             = "Steady"
  Timestepping Method         = "BDF"
  BDF order                   = 2

  Steady State Min Iterations = 1
  Steady State Max Iterations = 100

  Timestep Intervals          = 450
  Timestep Sizes              = 0.11111111  ![a] 9 timesteps per year
  Output Intervals            = 100
  Restart File                = "relax_2150.result"
  Restart Time                = Real 0.0
  Post File                   = "../VTU/heat_sources_<step>.vtu"
  Output File                 = "heat_sources_<step>.result"        !\"
  Max Output Level            = 3
  !Restart Before Initial Conditions = Logical False
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                              END SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                 BEGIN BODIES (i.e., domains to compute on)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body 1
  Name              = "Glacier"
  Body Force        = 1
  Equation          = 1
  Material          = 1
  Initial Condition = 1
End

Body 2
  Name              = "Surface"
  Body Force        = 2
  Equation          = 2
  Material          = 1
  Initial Condition = 2
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BODIES
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
  Velocity 1      = Real 0.0
  Velocity 2      = Real 0.0
  Pressure        = Real 0.0

  Firn            = real 0.0
  Densi           = real 0.0
  enthalpy_h      = real 125656.0    ![J kg-1]

  Hydrostatic Pressure = Variable depth
                        Real lua "(rhoi*-gravity*tx[0])"
End

Initial Condition 2
  Zs      = Variable Coordinate 1
            Real cubic
               include   "../../input_data/lilk-a_surf.dat"
             End
  Ref Zs = Variable Coordinate 1
            Real cubic
               include   "../../input_data/lilk-a_surf.dat"
             End
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN BODY FORCEs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Flow BodyForce 1    = Real 0.0
  Flow BodyForce 2    = Real #gravity   ![m a^-1]

  ! Set Passive Nodes
  Flow Solution Passive      = Variable depth, height
                             Real lua "((tx[0] + tx[1]) < 25.0)"

  ! Deformational Heat Source
  Heat Source = Variable "W"
               real MATC "if (tx<0.0) (0.0); else (tx*1e6/917.0)" !Convert to J yr-1 kg-1

  ! Enthalpy Limiters
  Enthalpy_h Upper Limit = Variable Phase Change Enthalpy
 	                         real lua "(tx[0] +0.03*334000.0)"
  Enthalpy_h Lower Limit = real 0.0

  ! Can't Call the variable hydrostatic pressure, since that already seems to be
  ! a keyword arugment
  Hydro Pressure = Variable depth
                        Real lua "(rhoi*-gravity*tx[0])"
End

Body Force 2
  Zs Accumulation Flux 1 = Real 0.0
  Zs Accumulation Flux 2 = Equals "Mass Balance"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BODY FORCE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN MATERIALs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1
  !~~~~~~~~~~~~~~~~~~
  ! Viscosity Model:
  !~~~~~~~~~~~~~~~~~~
  Name                       = String "ice"
  Density                    = real #rhoi_si*1.0E-06*spy^(-2.0) ![MPa m^-2 a^2]
  Viscosity Model            = String "Glen"
  ! Viscosity has to be set to a dummy value to avoid warning output from Elmer
  Viscosity                  = Real 1.0
  Glen Exponent              = Real 3.0
  Critical Shear Rate        = Real 1.0e-10
  Rate Factor 1              = Real #A1         ! -- [MPa^-3a^-1']
  Rate Factor 2              = Real #A2         ! -- [MPa^-3a^-1']
  ! these are in SI units - no problem, as long as the gas constant also is
  Activation Energy 1        = Real #Q1         ! -- [J mol^{-1}]
  Activation Energy 2        = Real #Q2         ! -- [J mol^{-1}]
  Glen Enhancement Factor    = Real 1.0
  ! the temperature to switch between the two regimes in the flow law
  Limit Temperature          = real -10.0       ! [C]

  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ! Thermodynamic Properties for Enthalpy:
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Enthalpy Density           = Equals "Densi"        ! [kg m-3]
  Enthalpy Water Diffusivity = real #1.045e-4*spy    ! [kg m-1 a-1] <--- [kg m-1 s-1] (Gilbert et al. 2014, Table 1)
  ! NOTE: the enthalpy heat Diffusivity should be a function of temperature and
  !       density
  Enthalpy Heat Diffusivity  = Variable Temperature
                               Real procedure "../../bin/thermodynamics" "Diffusivity"
  ! Limiters
  Min Zs                  = Variable Zbed
                            Real MATC "tx(0)+25.0"
  Max Zs                  = Variable Zbed
                            Real MATC "tx(0)+10000.0"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END MATERIALs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                               BEGIN SOLVERS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 1
  !Exec Solver                              = "Never"
  Equation                                 = "ExportVertically"
  Procedure                                = File "ElmerIceSolvers" "ExportVertically"
  Variable                                 = String "Zbed"
  Variable DOFs                            = 1
  Linear System Solver                     = Iterative
  Linear System Iterative Method           = BiCGStab
  Linear System Max Iterations             = 500
  Linear System Preconditioning            = ILU1
  Linear System Convergence Tolerance      = 1.0e-06

  Nonlinear System Max Iterations          = 1
  Nonlinear System Convergence Tolerance   = 1.0e-06
End

Solver 2
  !Exec Interval              = 9
  !Exec Solver                = "before timestep"
  Equation                   = "MapCoordinate"
  Procedure                  = "StructuredMeshMapper" "StructuredMeshMapper"
  Active Coordinate          = Integer 2 ! the mesh-update is y-direction
  ! For time being this is currently externally allocated
  Mesh Velocity Variable     = String "Mesh Velocity 2"
  ! The 1st value is special as the mesh velocity could be unrelistically high
  Mesh Velocity First Zero   = Logical True
  Dot Product Tolerance      = Real 0.01
  ! Essential to keep a minimum of 10 m flow height
  Correct Surface            = Logical True
  Minimum Height             = Real 25.0
End

Solver 3
  !Exec Interval              = 9
  Equation                   = "HeightDepth"
  Exec Solver                = "Before Timestep"
  Procedure                  = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate          = Integer 2
  Operator 1                 = Depth
  Operator 2                 = Height
End

! Stokes Flow
Solver 4
  !Exec Interval                            = 9
  Equation                                 = "Navier-Stokes"
  Optimize Bandwidth                       = Logical True
  Stabilization Method                     = String "Stabilized"
  Flow model                               = String "Stokes"

  Linear System Solver                     = Direct
  Linear System Direct Method              = umfpack

  Nonlinear System Max Iterations          = 50
  Nonlinear System Convergence Tolerance   = 1.0e-6
  Nonlinear System Newton After Iterations = 5
  Nonlinear System Newton After Tolerance  = 1.0e-04
  Nonlinear System Reset Newton            = Logical True

  Steady State Convergence Tolerance       = Real 1.0e-8

  Exported Variable 1                      = String "Mass Balance"
  Exported Variable 1 DOFs                 = 1
  Exported Variable 2                      = String "Densi"
  Exported Variable 2 DOFs                 = 1
  Exported Variable 3                      = String "Firn"
  Exported Variable 3 DOFs                 = 1
  Exported Variable 4                      = String "Mesh Velocity"
  Exported Variable 4 DOFS                 = 2
End

! Surface Mass Balance
Solver 5
  !Exec Interval            = 9
  Exec Solver              = String "Never"
  Equation                 = "SurfBoundary"
  procedure                =  "../../bin/SurfaceBoundary" "SurfaceMassBalance"

  Variable                 = "Mass Balance"
  Variable DOFs            = 1

  Exported Variable 1      = String "Densi"
  Exported Variable 1 DOFs = 1
  Exported Variable 2      = String "Firn"
  Exported Variable 2 DOFs = 1
  Exported Variable 3      = String "Melting"
  Exported Variable 3 DOFs = 1
End

! Free Surface
Solver 6
   !Exec Interval                           = 9
   Exec Solver                             = String "Never"
   Equation                                = "Free Surface Evolution"
   Variable                                = String "Zs"
   Variable DOFs                           =  1

   Procedure                               = "FreeSurfaceSolver" "FreeSurfaceSolver"
   Before Linsolve                         = "EliminateDirichlet" "EliminateDirichlet"

   ! this enables the limitation of the free surface
   ! by upper and/or lower limits (see material section above)
   ! using a variational inequality formulation
   Apply Dirichlet                         = Logical True
   Apply Limiter                           = Logical True

   Linear System Solver                    = Iterative
   Linear System Iterative Method          = BiCGStab
   Linear System Preconditioning           = ILU0
   Linear System Max Iterations            = 1500
   Linear System Preconditioning           = ILU1
   Linear System Convergence Tolerance     = 1.0e-09

   Nonlinear System Max Iterations         = 100 ! variational inequality needs more than one round
   Nonlinear System Min Iterations         = 5
   Nonlinear System Convergence Tolerance  = 1.0e-6
   Nonlinear System Relaxation Factor      = 0.7

   Steady State Convergence Tolerance      = 1.0e-8

   !Stabilization Method                    = Stabilized
   Stabilization Method                    = String "Bubbles"

   ! Needed to update the Accumulation b/w itterations
   Nonlinear Update Exported Variables     = Logical True
   ! needed for evaluating the contact pressure
   Exported Variable 1                     = -dofs 1 "Zs Residual"
   ! needed for storing the initial shape (needed for updates)
   Exported Variable 2                     = -dofs 1 "RefZs"
   !Exported Variable 3                     = -dofs 1 "Zbed"
End


! Deformational Heat
Solver 7
  Exec Solver                              = String "Never" ! <DeformationalHeat>
  Equation                                 = "DeformationalHeat"
  Variable                                 = "W"
  Variable DOFs                            = 1
  procedure                                = File "ElmerIceSolvers" "DeformationalHeatSolver"

  Linear System Solver                     = "Iterative"
  Linear System Iterative Method           = "BiCGStab"
  Linear System Max Iterations             = 500
  Linear System Convergence Tolerance      = 1.0E-07
  Linear System Abort Not Converged        = Logical True
  Linear System Preconditioning            = "ILU0"

  Steady State Convergence Tolerance       = 1.0E-04
  Nonlinear System Convergence Tolerance   = 1.0E-06
  Nonlinear System Max Iterations          = 50
  Nonlinear System Relaxation Factor       = Real 1.0
End

! Enthalpy Solver
Solver 8
  Equation                                 = String "Enthalpy Equation"
  Procedure                                = File "ElmerIceSolvers" "EnthalpySolver"
  Variable                                 = String "Enthalpy_h"

  Linear System Solver                     = "Iterative"
  Linear System Iterative Method           = "BiCGStab"
  Linear System Preconditioning            = "ILU0"
  Linear System Max Iterations             = 500
  Linear System Convergence Tolerance      = 1.0E-07
  Linear System Abort Not Converged        = Logical True

  Nonlinear System Newton After Tolerance  = 1.0e-06
  Nonlinear System Convergence Tolerance   = 1.0E-05
  Nonlinear System Max Iterations          = 50
  Nonlinear System Relaxation Factor       = Real 1.0

  Steady State Convergence Tolerance       = 1.0E-04

  Apply Limiter                            = Logical True
  Apply Dirichlet                          = Logical True
  Stabilize                                = Logical True
  !Nonlinear Update Exported Variables      = Logical True
  Before Linsolve                          = "EliminateDirichlet" "EliminateDirichlet"

  Exported Variable 1                      = String "Phase Change Enthalpy" ! (J kg-1)
  Exported Variable 1 DOFs                 = 1
  Exported Variable 2                      = String "Water Content"         ! (%)
  Exported Variable 2 DOFs                 = 1
  Exported Variable 3                      = String "Temperature"           ! (°C)
  Exported Variable 3 DOFs                 = 1
End

! Export time dependent Hydrostatic Pressure
Solver 9
   Equation = "UpdateExport"
   Procedure = File "ElmerIceSolvers" "UpdateExport"
   Variable = -nooutput "dumy"

   Exported Variable 1 = -dofs 1 "Hydro Pressure"
End


Solver 10
  Exec Solver = String "Never" ! <percolation>
  Equation    = String "percolation"
  Procedure   = File "../../bin/percol_1D_solver" "percol_1D_solver"
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                             END SOLVERS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Equation 1
  Name               = "Equation1"
  Convection         = "Computed"
  Flow Solution Name = String "Flow Solution"
  Active Solvers(8)  = 1 2 3 4 7 8 9 10
End

Equation 2
  Name               = "Equation2"
  Convection         = "Computed"
  Flow Solution Name = String "Flow Solution"
  Active Solvers(2)  = 5 6
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN BOUNDARY CONDITIONs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! Bedrock
Boundary Condition 1
  Name              = "bed"
  Target Boundaries = 1
  Compute Normals   = Logical True
  Bottom Surface    = Variable Coordinate 1
                      Real cubic
                         include   "../../input_data/lilk-a_bed.dat"
                      End
  Zbed              = Variable Coordinate 1
                      Real cubic
                         include   "../../input_data/lilk-a_bed.dat"
                      End
  Velocity 1        = Real 0.0
  Velocity 2        = Real 0.0

  ! < Heat_Flux>
  Enthalpy Heat Flux BC = logical False
  Enthalpy Heat Flux    = real #0.055*spy    ! [J m^-2 a^-1] <---- [W m-2] == [J m^-2 s^-1]
End

Boundary Condition 2
  Name                 = "surface"
  Body Id              = 2
  Target Boundaries    = 2
  Top Surface          = Equals "Zs"
  Depth                = Real 0.0
  Enthalpy_h           = Variable Coordinate 2
                         Real Procedure  "../../bin/SurfaceBoundary" "getSurfaceEnthalpy"
  ! ! Prescribe melt for percolation model
  ! Surf_melt            = Equals "Melting"

  ! <surf_melt>
End

! Front of the glacier
Boundary Condition 3
  Target Boundaries = 3
End

! Upper limit of the glacier
Boundary Condition 4
  Target Boundaries = 4
  Velocity 1        = real 0.0
  !Velocity 2        = Real 0.0
End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BOUNDARY CONDITIONs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
