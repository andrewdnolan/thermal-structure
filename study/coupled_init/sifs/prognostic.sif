!echo on

!---LUA BEGIN
! assert(loadfile('test.lua'))()
!---LUA END


! Physical Constants
#spy         = 365.25*24*60*60              ! -- [s a^-1]
! SI base units
#rhoi_si     = 910.0                        ! -- [kg m^-3]
#rhow_si     = 1000.0                       ! -- [kg m^-3]
#gravity_si  = -9.81                        ! -- [m s^-2]
! Elmer Base units
#rhoi        = rhoi_si*1.0e-06*spy^(-2.0)
#rhow        = rhow_si*1.0e-06*spy^(-2.0)   ! -- [MPa m^-2 a^2] <--- [kg m^-3]
#gravity     = gravity_si*spy^2             ! -- [m a^-1]       <--- [m s^-2]
!-------------------------------------------------------------------------------
! Flow Law Parameters from  Cuffey and Paterson (2010)
!-------------------------------------------------------------------------------
#A1 = 2.89165e-13*spy*1.0e18  ! -- [MPa^{-3} a^{-1}] <--- [Pa^{-3} s^{-1}]
#A2 = 2.42736e-02*spy*1.0e18  ! -- [MPa^{-3} a^{-1}] <--- [Pa^{-3} s^{-1}]
! Values below are in SI units. No problem, as long as the gas constant (R) also is
#Q1 = 60.0e3                  ! -- [J mol^{-1}]
#Q2 = 115.0e3                 ! -- [J mol^{-1}]
#R  = 8.314                   ! -- [J mol^{-1} K^{-1}]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Header
  CHECK KEYWORDS Warn
  Mesh DB           "./<KEY>/" "mesh_dx<DX>"        !\"
  Include Path      "./<KEY>/"                    !\"
  Results Directory "./<KEY>/"                    !\"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END HEADER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                           BEGIN CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constants
  include "./params/ref_params.sif"

  !Physical Constants:
  Gas Constant                    = real #R        ! [J mol^{-1} K^{-1}]
  Mass Balance Offset             = Real <offset>  ! m y^{-1}
  T_mean                          = real <T_mean>  ! Mean annual air temp @ z_ref [C]

  !~~~~~~~~~~~~~~~~~~~~~~~~~~
  ! Thermodynamic parameters:
  !~~~~~~~~~~~~~~~~~~~~~~~~~~
  t_ref_enthalpy                  = real 200.0     ![K]
  L_heat                          = real 334000.0  ![J kg-1]
  !   Cp(T) = A*T + B
  Enthalpy Heat Capacity A        = real 7.253     ![J kg-1 K-2]
  Enthalpy Heat Capacity B        = real 146.3     ![J kg-1 K-1]
  !
  P_surf                          = real 0.1013    ![MPa] Surface atmospheric pressure
  P_triple                        = real 6.1173e-4 ![MPa] Triple point pressure for water
  T_triple                        = Real 273.16    ![K]       Temperature of water triple point
  beta_clapeyron                  = real 0.0974    ![K MPa-1] Clausus clapeyron relationship (Gilbert et al. 2014)
  Pressure Variable               = String "Pressure"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                             END CONSTANTS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                            BEGIN SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Simulation
  Coordinate System           = "Cartesian 2D"
  Simulation Type             = "Transient"
  Timestepping Method         = "BDF"
  BDF order                   = 2

  Steady State Min Iterations = 1
  Steady State Max Iterations = <SS_itters>

  Timestep Intervals          = <NT>  ![a]
  Timestep Sizes              = <dt>  ![a]
  Output Intervals            = 10

  ! Post File                   = "VTU/<run_name>.vtu"
  Output File                 = "<run_name>.result"               !\"
  Max Output Level            = 3

  Restart File                = "<RESTART>"
  Restart Position            = 9
  Restart Time                = Real 0.0
  Restart Before Initial Conditions = Logical True
  Initialize Dirichlet Conditions   = Logical False
  ! Convergence Monitor         = Logical True
  ! Convergence Monitor File    = "<convg_file>"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                              END SIMULATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                 BEGIN BODIES (i.e., domains to compute on)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body 1
  Name              = "Glacier"
  Body Force        = 1
  Equation          = 1
  Material          = 1
  Initial Condition = 1
End

Body 2
  Name              = "Surface"
  Body Force        = 2
  Equation          = 2
  Material          = 2
  Initial Condition = 2
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BODIES
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Initial Condition 1
  ! Dynamic Variables from restart file
  Velocity 1       = Equals "Velocity 1"
  Velocity 2       = Equals "Velocity 2"
  Pressure         = Equals "Pressure"
  Mesh Velocity 1  = Real 0.0
  Mesh Velocity 2  = Real 0.0
  ! Thermodynamic Variables from restart file
  W                = Equals "W"             ! [J kg-1]
  Densi            = Equals "Densi"         ! [kg m-3]
  Enthalpy_h       = Equals "Enthalpy_h"    ! [J kg-1]
  Temperature      = Equals "Temperature"   ! [C]
  Water Content    = Equals "Water Content" ! [-]
  Surface Enthalpy = Equals "Surface Enthalpy"
End

Initial Condition 2
  Zs    = Variable Coordinate 1
          Real
           include  "../../input_data/topography/<KEY>_surf.dat"
          End

  RefZs = Variable Coordinate 1
          Real
           include  "../../input_data/topography/<KEY>_surf.dat"
          End
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END INITIAL CONDITIONS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN MATERIALs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Material 1
  Name                       = String "ice"
  Density                    = Real #rhoi_si*1.0E-06*(spy)^(-2.0)  ! [kg m-3] ---> [MPa a2 m-2]

  Viscosity Model            = String "Glen"
  ! Viscosity has to be set to a dummy value to avoid warning output from Elmer
  Viscosity                  = Real 1.0
  Glen Exponent              = Real 3.0
  Critical Shear Rate        = Real 1.0e-10
  Rate Factor 1              = Real #A1         ! -- [MPa^-3a^-1']
  Rate Factor 2              = Real #A2         ! -- [MPa^-3a^-1']
  ! these are in SI units - no problem, as long as the gas constant also is
  Activation Energy 1        = Real #Q1         ! -- [J mol^{-1}]
  Activation Energy 2        = Real #Q2         ! -- [J mol^{-1}]
  Glen Enhancement Factor    = Real 1.0
  ! the temperature to switch between the two regimes in the flow law
  Limit Temperature          = Real -10.0       ! [C]

  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ! Thermodynamic Properties for Enthalpy:
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Enthalpy Density           = Equals "Densi"        ! [kg m-3]
  Enthalpy Water Diffusivity = real #1.045e-4*spy    ! [kg m-1 a-1] <--- [kg m-1 s-1] (Gilbert et al. 2014, Table 1)
  ! NOTE: the enthalpy heat Diffusivity should be a function of temperature and
  !       density
  Enthalpy Heat Diffusivity  = Variable Temperature
                               Real procedure "../../bin/Thermodynamics" "Diffusivity"
End

! Soft Limiters for Free Sufrace
Material 2
  Min Zs                     = Variable Zbed
                               Real lua "tx[0] + 10.0"
  Max Zs                     = Variable Zbed
                               Real lua "tx[0] + 10000.0"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END MATERIALs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!                               BEGIN SOLVERS
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Solver 1
  Exec Solver                              = "Before Simulation"
  Equation                                 = "ExportVertically"
  Procedure                                = File "ElmerIceSolvers" "ExportVertically"
  Variable                                 = String "Zbed"
  Variable DOFs                            = 1
  Linear System Solver                     = Iterative
  Linear System Iterative Method           = BiCGStab
  Linear System Max Iterations             = 500
  Linear System Preconditioning            = ILU1
  Linear System Convergence Tolerance      = 1.0e-06

  Nonlinear System Max Iterations          = 1
  Nonlinear System Convergence Tolerance   = 1.0e-06
End

Solver 2
  Exec Interval                           = 10
  Timestep Scale                          = 10
  ! Exec Solver              = "before timestep"
  Equation                 = "MapCoordinate"
  Procedure                = "StructuredMeshMapper" "StructuredMeshMapper"
  Active Coordinate        = Integer 2

  Mesh Velocity Variable   = String "Mesh Velocity 2"
  Mesh Velocity First Zero = Logical True
  Dot Product Tolerance    = Real 0.01

  ! ! Essential to keep a minimum of 10 m flow height
  Correct Surface          = Logical True
  Minimum Height           = Real 10.0
End

Solver 3
  Exec Interval                           = 10
  Timestep Scale                          = 10
  Equation                   = "HeightDepth"
  ! Exec Solver                = "Before Timestep"
  Procedure                  = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate          = Integer 2
  Operator 1                 = Depth
  Operator 2                 = Height
End

Solver 4
  Exec Interval                           = 10
  Timestep Scale                          = 10
  ! Exec Solver                   = String "Never"
  Equation                      = String "DataToFieldSolver"
  Procedure                     = File "DataToFieldSolver" "DataToFieldSolver"
  Linear System Residual Output = Integer 0
  Variable                      = String "Mass Balance"
  Target Variable               = String "Zs Accumulation Flux 2"
End

! Surface Heating Solver
Solver 5
  ! Exec Solver = "Never"
  Equation              = String "Surface Boundary"
  Procedure             = File "../../bin/SurfaceBoundary" "Surface_Processes"
  Variable              = String "Surface_Enthalpy"

  Exported Variable 1   = -dofs 1 "Densi" ! [kg m^-3]
End

! Deformational Heat
Solver 6
  ! Exec Solver                   = String "Never"

  Exec Interval                           = 10
  Timestep Scale                          = 10
  ! Exec Solver = String "Always"
  Equation                                 = "DeformationalHeat"
  Variable                                 = "W"
  Variable DOFs                            = 1
  procedure                                = File "ElmerIceSolvers" "DeformationalHeatSolver"

  Linear System Solver                     = "Iterative"
  Linear System Iterative Method           = "BiCGStab"
  Linear System Max Iterations             = 500
  Linear System Convergence Tolerance      = 1.0E-07
  Linear System Abort Not Converged        = Logical True
  Linear System Preconditioning            = "ILU0"

  Steady State Convergence Tolerance       = 1.0E-03

  Nonlinear System Convergence Tolerance   = 1.0E-06
  Nonlinear System Max Iterations          = 50
  Nonlinear System Relaxation Factor       = Real 1.0

  Flow Solver Name                         = String "Flow Solution"
  Flow Loads Name                          = String "Flow Solution Loads"
End


Solver 7
  Exec Interval                           = 10
  Timestep Scale                          = 10
  Equation                                 = "Navier-Stokes"
  Flow model                               = String "Stokes"
  Optimize Bandwidth                       = Logical True
  !  Stabilization Method = [Stabilized,P2/P1,Bubbles]
  Stabilization Method                     = String "Bubbles"


  ! Linear System Solver                     = Direct
  ! Linear System Direct Method              = "UMFPACK"
  Linear System Solver                     = "Iterative"
  Linear System Iterative Method           = "GCR"     !"BICGStab"
  Linear System Max Iterations             = 5000
  Linear System Convergence Tolerance      = 1.0E-08
  Linear System Abort Not Converged        = Logical True
  Linear System Preconditioning            = "ILU2"
  ! Linear System Convergence Measure        = String "solution"
  ! Linear System Residual Output            = 10

  Nonlinear System Convergence Tolerance   = 1.0E-07
  Nonlinear System Max Iterations          = 25
  Nonlinear System Newton After Iterations = 25
  Nonlinear System Newton After Tolerance  = 1.0E-04
  Nonlinear System Reset Newton            = Logical True
  ! Nonlinear System Convergence Measure     = String "solution"

  Steady State Convergence Tolerance       = 1.0E-03
  ! Steady State Convergence Measure         = String "solution"

  Exported Variable 1                      = -dofs 2 "Mesh Velocity"
  Exported Variable 2                      = -dofs 1 "Densi"
  ! Exported Variable 4                      = -dofs 1 "Melt"
End

! Enthalpy Solver
Solver 8
  ! Exec Solver = "Never"
  Equation                                 = String "Enthalpy Equation"
  Procedure                                = File "ElmerIceSolvers" "EnthalpySolver"
  Variable                                 = String "Enthalpy_h"

  ! Linear System Solver                     = "Iterative"
  ! Linear System Iterative Method           = "CG"
  ! Linear System Preconditioning            = "ILU0"
  ! Linear System GCR Restart                = 20
  ! Linear System Max Iterations             = 500
  ! Linear System Convergence Tolerance      = 1.0E-07
  ! Linear System Residual Output            = 20
  ! ! Linear System Abort Not Converged        = Logical True

  Linear System Solver                     = String "Direct"
  Linear System Direct Method              = String "Mumps"
  Linear System Convergence Tolerance      = Real 1.0E-08
  Linear System Abort Not Converged        = Logical True
  Linear System Preconditioning            = String "ILU1"
  Linear System Residual Output            = Integer 1
  ! Linear System Convergence Measure        = String "solution"

  Nonlinear System Newton After Tolerance  = 1.0E-06
  Nonlinear System Convergence Tolerance   = 1.0E-05
  Nonlinear System Max Iterations          = 50
  Nonlinear System Relaxation Factor       = Real 0.5
  Nonlinear System Reset Newton            = Logical True
  ! Nonlinear System Convergence Measure     = String "solution"

  Steady State Convergence Tolerance       = 1.0E-3
  ! Steady State Convergence Measure         = String "solution"

  Apply Limiter                            = Logical True
  Optimize Bandwidth                       = Logical True
  Apply Dirichlet                          = Logical True
  Stabilize                                = Logical True
  ! Update Exported Variables                = Logical True
  ! Nonlinear Update Exported Variables      = Logical True
  ! Before Linsolve                          = "EliminateDirichlet" "EliminateDirichlet"

  Exported Variable 1                      = String "Phase Change Enthalpy" ! (J kg-1)
  Exported Variable 1 DOFs                 = 1
  Exported Variable 2                      = String "Water Content"         ! [-[0,1]]
  Exported Variable 2 DOFs                 = 1
  Exported Variable 3                      = String "Temperature"           ! (°C)
  Exported Variable 3 DOFs                 = 1

  Flow Solver Name                         = String "Flow Solution"
  ! Flow Loads Name                          = String "Flow Solution Loads"
  Pressure Variable                        = String "Pressure"

  ! calculate loads = true
End

Solver 9
   Exec Interval                           = 10
   Timestep Scale                          = 10
   !Exec Solver                             = always
   Equation                                = "Free Surface Evolution"
   Variable                                = String "Zs"
   Variable DOFs                           =  1

   Procedure                               = "FreeSurfaceSolver" "FreeSurfaceSolver"
   ! Before Linsolve                         = "EliminateDirichlet" "EliminateDirichlet"

   ! this enables the limitation of the free surface
   ! by upper and/or lower limits (see material section above)
   ! using a variational inequality formulation
   Apply Dirichlet                         = Logical True

   Linear System Solver                    = Iterative
   Linear System Iterative Method          = BiCGStab
   Linear System Max Iterations            = 10000
   Linear System Preconditioning           = ILU1
   Linear System Convergence Tolerance     = 1.0e-08

   Nonlinear System Max Iterations         = 100 ! variational inequality needs more than one round
   Nonlinear System Min Iterations         = 2
   Nonlinear System Convergence Tolerance  = 1.0e-10

   Steady State Convergence Tolerance      = 1.0e-6

   Stabilization Method                    = String "Bubbles"

   ! Needed to update the Accumulation b/w itterations
   Nonlinear Update Exported Variables     = Logical True
   ! needed for evaluating the contact pressure
   Exported Variable 1                     = -dofs 1 "Zs Residual"
   ! needed for storing the initial shape (needed for updates)
   Exported Variable 2                     = -dofs 1 "RefZs"
   ! needed for save surface boundary conditions
   ! Exported Variable 3                     = -dofs 1 "Zs Accumulation Flux 2"
End

! Solver 10
!    Exec Condition = Variable "Time"
!                     Real lua "netcdf_cond(tx[0], 10)"
!
!    Equation = "NetcdfOutPutSolve"
!    Procedure = "NetcdfUGRIDOutputSolver" "NetcdfOutputSolver"
!    Variable = -nooutput "test"
!
!    Optimize Bandwidth = Logical False
!
!    OutPut Directory = File "nc"
!    Output File Name = "<run_name>"
!
!    ! Stokes Solver Fields
!    Scalar Field 1  = String "Pressure"
!    Scalar Field 2  = String "velocity 1"
!    Scalar Field 3  = String "velocity 2"
!    ! Enthalpy Solver Fields
!    Scalar Field 4  = String "Enthalpy_h"
!    Scalar Field 5  = String "Water Content"
!    Scalar Field 6  = String "Temperature"
!    Scalar Field 7  = String "Phase Change Enthalpy"
!    Scalar Field 8  = String "Surface_Enthalpy"
!    ! Free Surface Solver Fields
!    Scalar Field 9  = String "Zs"
!    Scalar Field 10 = String "Mass Balance"
!    ! Misc Solver Fields
!    Scalar Field 11 = String "Depth"
!    Scalar Field 12 = String "Height"
!
!    Compute LonLat = Logical False
!    ! Projection = File "+proj=stere +lat_0=90 +lat_ts=70 +lon_0=-45 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs"
!
! End

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Equation 1
  Name               = "Equation1"
  Convection         = "Computed"
  Flow Solution Name = String "Flow Solution"
  Active Solvers(8)  = 1 2 3 4 5 6 7 8
End

Equation 2
  Name               = "Equation2"
  Convection         = "Computed"
  Flow Solution Name = String "Flow Solution"
  Active Solvers(1)  = 9
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END EQUATION
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN BODY FORCEs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Body Force 1
  Name                   = "BodyForce"
  Flow BodyForce 1       = Real 0.0
  Flow BodyForce 2       = Real #gravity   ![m a^-1]
  Flow Solution Passive  = Variable depth, height
                           Real lua "((tx[0] + tx[1]) < 10.0)"

  ! Deformational (mass) Heat Source (Convert to J yr-1 kg-1)
  Heat Source = Variable "W"
                real MATC "if (tx<0.0) (0.0); else (tx*1e6/910.0)"

  ! Enthalpy (soft) Limiters
  Enthalpy_h Upper Limit = Variable Depth, Phase Change Enthalpy
                           real Procedure "../../bin/Thermodynamics" "Limit_Enthalpy"
  Enthalpy_h Lower Limit = real 0.0
End


Body Force 2
  Name                       = "Climate"
  Zs Accumulation Flux 1     = Real 0.0e0
  Zs Accumulation Flux 2     = Variable Coordinate 2
                                Real Procedure "../../bin/mass_balance" "<FIT>"
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BODY FORCE
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! BEGIN BOUNDARY CONDITIONs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! Bedrock
Boundary Condition 1
  Name              = "bedrock"
  Target Boundaries = 1
  Compute Normals   = Logical True

  ! No sliding
  Velocity 1        = Real 0.0e0
  Velocity 2        = Real 0.0e0
  Bottom Surface    = Variable Coordinate 1
                      Real cubic
                         include "../../input_data/topography/<KEY>_bed.dat"
                      End
  Zbed              = Variable Coordinate 1
                      Real cubic
                         include "../../input_data/topography/<KEY>_bed.dat"
                      End

  ! < Heat_Flux>
  Enthalpy Heat Flux BC = Logical True
  Enthalpy Heat Flux    = real #0.055*spy    ! [J m^-2 a^-1] <---- [W m-2] == [J m^-2 s^-1]
End

Boundary Condition 2
  Name                 = "surface"
  Body Id              = 2
  Target Boundaries    = 2
  Top Surface          = Equals "Zs"
  Depth                = Real 0.0
  Enthalpy_h           = Equals "Surface_Enthalpy"
End

! Front of the glacier
Boundary Condition 3
  Name                       = "Head Wall"
  Target Boundaries          = 3
  ! Apply Dirichlet Condition at upper margin
  ! See: http://elmerfem.org/elmerice/wiki/doku.php?id=tips:freesurface
  Zs                         = Equals "Zbed"
End

! Upper limit of the glacier
Boundary Condition 4
  Target Boundaries = 4
  ! Velocity 1        = real 0.0
End
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END BOUNDARY CONDITIONs
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
